/* eslint-disable no-bitwise */
/* eslint-disable no-mixed-operators */
/* eslint-disable no-undef */
/* eslint-disable func-names */
/* eslint-disable no-param-reassign */
/* eslint-disable no-unused-vars */
/* eslint-disable max-len */
import api from '../index';

const _0x36ba = ['now', 'catch', 'getTimestamp', 'data', 'Data']; const _0x2274 = function (_0x36ba0c, _0x22747f) { _0x36ba0c -= 0x0; const _0x3a7430 = _0x36ba[_0x36ba0c]; return _0x3a7430; }; function timestampToUint8Array(_0x5ab689, _0xc4677b) { const _0x309858 = new Uint8Array(0x8); const _0x3baec9 = Math.floor(_0x5ab689 / 0x100000000); const _0x13185e = _0x5ab689 % 0x100000000; if (_0xc4677b) { for (let _0x1c79a6 = 0x0; _0x1c79a6 < 0x4; _0x1c79a6 += 0x1) { _0x309858[_0x1c79a6] = _0x13185e >> _0x1c79a6 * 0x8 & 0xff; } for (let _0x5a82b7 = 0x4; _0x5a82b7 < 0x8; _0x5a82b7 += 0x1) { _0x309858[_0x5a82b7] = _0x3baec9 >> (_0x5a82b7 - 0x4) * 0x8 & 0xff; } } else { for (let _0x56e090 = 0x0; _0x56e090 < 0x4; _0x56e090 += 0x1) { _0x309858[_0x56e090] = _0x3baec9 >> (0x3 - _0x56e090) * 0x8 & 0xff; } for (let _0x163fa6 = 0x4; _0x163fa6 < 0x8; _0x163fa6 += 0x1) { _0x309858[_0x163fa6] = _0x13185e >> (0x7 - _0x163fa6) * 0x8 & 0xff; } } return _0x309858; }let diff = 0x0; const _getTimestamp = async () => { if (diff) { return diff + Date.now(); } const _0x2281e8 = async () => { const _0x561a94 = await api[_0x2274('0x2')]()[_0x2274('0x1')](() => null); if (_0x561a94 && _0x561a94[_0x2274('0x3')].Status === 0x3e8) { return Number(_0x561a94.data[_0x2274('0x4')]); } return null; }; const _0x2c3133 = await _0x2281e8(); if (_0x2c3133) { diff = _0x2c3133 - Date[_0x2274('0x0')](); return diff + Date.now(); } return Date[_0x2274('0x0')](); }; const getTimestamp = async () => timestampToUint8Array(await _getTimestamp(), !![]);
export default getTimestamp;
